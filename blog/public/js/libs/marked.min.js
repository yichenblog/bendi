/**
 * 简化版marked - 一个Markdown解析器和编译器
 * 提供基本的Markdown到HTML转换功能
 */
(function(global) {
    // 简单的Markdown解析函数
    function marked(src) {
        if (!src) return '';
        
        // 基本的转换规则
        return src
            // 标题
            .replace(/^### (.*$)/gm, '<h3>$1</h3>')
            .replace(/^## (.*$)/gm, '<h2>$1</h2>')
            .replace(/^# (.*$)/gm, '<h1>$1</h1>')
            
            // 粗体和斜体
            .replace(/\*\*\*(.*?)\*\*\*/g, '<strong><em>$1</em></strong>')
            .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
            .replace(/\*(.*?)\*/g, '<em>$1</em>')
            
            // 链接
            .replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2">$1</a>')
            
            // 图片
            .replace(/!\[([^\]]+)\]\(([^)]+)\)/g, '<img src="$2" alt="$1">')
            
            // 代码块
            .replace(/```([^`]*?)```/g, function(match, code) {
                return '<pre><code>' + code.trim() + '</code></pre>';
            })
            
            // 行内代码
            .replace(/`([^`]*?)`/g, '<code>$1</code>')
            
            // 无序列表
            .replace(/^\* (.*$)/gm, '<ul><li>$1</li></ul>')
            .replace(/<\/ul><ul>/g, '')
            
            // 有序列表
            .replace(/^\d+\. (.*$)/gm, '<ol><li>$1</li></ol>')
            .replace(/<\/ol><ol>/g, '')
            
            // 引用
            .replace(/^> (.*$)/gm, '<blockquote>$1</blockquote>')
            .replace(/<\/blockquote><blockquote>/g, '<br>')
            
            // 水平线
            .replace(/^---$/gm, '<hr>')
            
            // 段落
            .replace(/\n\n/g, '</p><p>')
            .replace(/^(.+)$/gm, function(match) {
                if (!/^<(h|p|ul|ol|bl|hr)/.test(match)) {
                    return '<p>' + match + '</p>';
                }
                return match;
            });
    }
    
    // 导出函数
    marked.parse = marked;
    marked.marked = marked;
    
    // 简单配置函数（仅为兼容性，实际不做任何事）
    marked.setOptions = function() {
        console.log('Using simplified marked parser');
        return marked;
    };
    
    // 导出为全局变量
    global.marked = marked;
    
    // 告知用户使用了简化版
    console.log('Fallback markdown parser loaded');
    
})(typeof window !== 'undefined' ? window : this); 